{"version":3,"sources":["components/SearchBoxName.js","components/SearchBoxCompany.js","components/Scroll.js","components/ErrorBoundry.js","components/Card.js","components/CardList.js","components/CardDisplay.js","container/App.js","serviceWorker.js","index.js"],"names":["SearchBoxName","_ref","searchChange","react_default","a","createElement","className","type","placeholder","onChange","SearchBoxCompany","Scroll","props","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","Card","id","name","email","phone","company","age","src","concat","alt","href","toLowerCase","toString","target","CardList","robots","map","_ref2","key","src_components_Card","CardDisplay","src_components_Scroll","components_ErrorBoundry","components_CardList","App","onSearchChangeName","event","searchfieldName","value","onSearchChangeCompany","searchfieldCompany","_this2","fetch","then","response","json","users","_this$state","filtredRobots","filter","robot","length","includes","components_SearchBoxName","components_SearchBoxCompany","components_CardDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_container_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b30d9dd6.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchBox.css';\n\n\nconst SearchBoxName =({ searchChange }) =>{\n  return(\n    <div className=\"searchField nameField\">\n      <input \n      className =\"pa3 ba br3 shadow-4 b--green bg-lightest-blue searchInput\"\n      type='search'\n      placeholder='Search by name...'\n      onChange = { searchChange }\n      />\n    </div>\n    )\n\n}\n\nexport default SearchBoxName;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\n\r\nconst SearchBoxCompany =({ searchChange }) =>{\r\n  return(\r\n    \r\n    <div className=\"searchField companyField\">\r\n      <input \r\n      className =\"pa3 ba br3 shadow-4 b--green bg-lightest-blue searchInput\"\r\n      type='search'\r\n      placeholder='Search by company...'\r\n      onChange = { searchChange }\r\n      />\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBoxCompany;","import React from 'react';\nimport './Scroll.css'\nconst Scroll = (props) =>{\n  return (\n    <div className=\"box\">\n      {props.children}\n    </div>\n    )\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      hasError:false\n    }\n  }\n\n  componentDidCatch(error, info){\n    this.setState({hasError: true})\n  }\n\n  render(){\n    if(this.state.hasError){\n      return <h2>Ooooops! That's not good...</h2>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ id, name, email, phone, company, age }) =>{\n\n  // const { name, email, id } = props;\n  // wtedy w nawiasie przy funkcji wpisujemy props i jest rozłożone\n  //ale lepiej zrobić to tak jak tutaj\n  return (\n    \n    <div className='bg-light-green dib br3 pa3 ma4 tc bw2 shadow-5 card'>\n      <div className=\"front tc\">\n      <img src={`https://robohash.org/${id}`} alt=\"Robofriend\"/>\n      <span className=\"nameMargin f3 shadow-5\"><h3>{name}</h3></span>\n      </div>\n\n      <div className=\"back tc\">\n      <h3>Company:<p><a href={`https://www.google.com/search?q=${company.toLowerCase().toString()}`}>{company}</a></p></h3>\n      <h3>Age:<p>{age}</p></h3>\n      <h3>Email adress:<p><a href={`mailto:${name.toLowerCase().toString()}@${company.toLowerCase().toString()}.com`} target=\"_top\">{email}</a></p></h3>\n      <h3>Phone number:<p><a href={`tel:${phone}`}>{phone}</a></p></h3>\n     </div>\n    </div>\n    \n    )\n}\n\nexport default Card;  \n","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map( ( { id, name, email, phone, key, company, age } ) => {\n                    return <Card \n                        key={key} \n                        id={id} \n                        name={name} \n                        email={email}\n                        phone={phone}\n                        company={company}\n                        age={age}\n                        />\n                })\n            }\n        </div>\n    )\n}\n \nexport default CardList; ","import React from 'react';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundry from './ErrorBoundry';\r\nimport CardList from './CardList';\r\n\r\n\r\n\r\nconst CardDisplay = ({robots}) =>{\r\n   return(\r\n        <Scroll>        \r\n          <ErrorBoundry>\r\n            <CardList robots={robots}/>\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n    )\r\n}\r\nexport default CardDisplay;","import React, { Component } from 'react';\nimport SearchBoxName from'../components/SearchBoxName';\nimport SearchBoxCompany from'../components/SearchBoxCompany';\nimport './App.css';\nimport CardDisplay from '../components/CardDisplay';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      robots:[],\n      searchfieldName:'',\n      searchfieldCompany:''\n    };\n  }\n\n//ustawienie stanu wyszukiwania nazwy\n  onSearchChangeName = (event) =>{\n    this.setState( { searchfieldName: event.target.value })\n  }\n\n//ustawienie stanu wyszukiwania firmy\n  onSearchChangeCompany = (event) =>{\n    this.setState( {searchfieldCompany: event.target.value } )\n  }\n\n\n//ustawienie listy robotów\n  componentDidMount(){\n    fetch('https://jsonstorage.net/api/items/086e9392-608c-445f-bb00-3dc3bca1c37b')\n    .then(response => response.json())\n    .then(users => this.setState( { robots: users })) \n  }\n\n\n  render(){\n    const { robots, searchfieldName, searchfieldCompany } = this.state;\n    const { onSearchChangeName, onSearchChangeCompany } = this;\n\n    const filtredRobots = robots.filter(robot =>{\n      if ( searchfieldName.length !== 0 ){\n        return robot.name.toLowerCase().includes(searchfieldName.toLowerCase());\n      }\n      else if ( searchfieldCompany.length !== 0 ){\n        return robot.company.toLowerCase().includes(searchfieldCompany.toLowerCase());\n      }\n       else if ( searchfieldName.length !== 0 || searchfieldCompany.length !== 0){\n        return robot.company.toLowerCase().includes(searchfieldCompany.toLowerCase()) || robot.name.toLowerCase().includes(searchfieldName.toLowerCase()) ;\n      }\n\n      else {\n        return robots;\n      }\n      });\n\n    if (!robots.length){\n      return <span className='loadText'><h1>Loading</h1></span> \n    }\n    else\n    {\n    return(\n      <div className=\"tc\">\n        <div className=\"container\">\n          <span className=\"header\"><h1>RoboFriends</h1></span>\n            <div className=\"searchboxDiv\">\n                <span className=\"searchbox searchboxName\"><SearchBoxName searchChange = {onSearchChangeName}/></span>\n                <span className=\"searchbox\"><h1> OR </h1></span>\n                <span className=\"searchbox searchboxCompany\"><SearchBoxCompany searchChange = {onSearchChangeCompany}/></span>\n            </div>\n        </div>\n         <CardDisplay robots={filtredRobots}/>\n      </div>\n    );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App /> , document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}